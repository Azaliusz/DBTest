// <auto-generated />
using DBTest.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DBTest.Migrations
{
    [DbContext(typeof(TestContext))]
    [Migration("20240321002844_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DBTest.Models.Sample", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Barcode")
                        .IsRequired()
                        .HasMaxLength(48)
                        .HasColumnType("character varying(48)");

                    b.Property<string>("PatientName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("SampleTypeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SampleTypeId");

                    b.ToTable("Sample");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Barcode = "T001",
                            PatientName = "Kis Pista",
                            SampleTypeId = 0
                        },
                        new
                        {
                            Id = 2,
                            Barcode = "T002",
                            PatientName = "Tóth János",
                            SampleTypeId = 0
                        },
                        new
                        {
                            Id = 3,
                            Barcode = "T003",
                            PatientName = "Teller Ede",
                            SampleTypeId = 2
                        },
                        new
                        {
                            Id = 4,
                            Barcode = "T004",
                            PatientName = "Tóth Rita",
                            SampleTypeId = 0
                        },
                        new
                        {
                            Id = 5,
                            Barcode = "T005",
                            PatientName = "Volly Zoli",
                            SampleTypeId = 2
                        },
                        new
                        {
                            Id = 6,
                            Barcode = "T006",
                            PatientName = "-",
                            SampleTypeId = 1
                        },
                        new
                        {
                            Id = 7,
                            Barcode = "T007",
                            PatientName = "Győri Dorottya",
                            SampleTypeId = 0
                        });
                });

            modelBuilder.Entity("DBTest.Models.SampleType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("SampleType");

                    b.HasData(
                        new
                        {
                            Id = 0,
                            Name = "Vizelet"
                        },
                        new
                        {
                            Id = 1,
                            Name = "Ellenörző folyadék"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Test folyadék"
                        });
                });

            modelBuilder.Entity("DBTest.Models.Sample", b =>
                {
                    b.HasOne("DBTest.Models.SampleType", "SampleType")
                        .WithMany("Sample")
                        .HasForeignKey("SampleTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SampleType");
                });

            modelBuilder.Entity("DBTest.Models.SampleType", b =>
                {
                    b.Navigation("Sample");
                });
#pragma warning restore 612, 618
        }
    }
}
